{"version":3,"file":"static/js/375.b1c196e3.chunk.js","mappings":"qSAYMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qIAGoBN,EAASO,IAH7B,+CAGKC,EAHL,EAGKA,KAHL,kBAIIA,EAAKC,SAJT,2HAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACCC,EADD,iBACmBD,GADnB,kBAGoBX,EAASO,IAAIK,GAHjC,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,kFACCC,EADD,iBACmBD,EADnB,8BAGoBX,EAASO,IAAIK,GAHjC,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,kFACCC,EADD,iBACmBD,EADnB,8BAGoBX,EAASO,IAAIK,GAHjC,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCJ,EADD,8BACgCI,GADhC,kBAGoBhB,EAASO,IAAIK,GAHjC,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2H,mKCzDMS,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iYAoBVE,EAAYF,EAAAA,GAAAA,IAAH,yE,kBCqEtB,EAtFqB,WAAO,IAAD,IACjBG,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOf,EAAP,KAAagB,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,oGAEZF,GAAW,GAFC,UAGOhB,EAAAA,EAAAA,IAAgBW,GAHvB,OAGNb,EAHM,OAIZgB,EAAQhB,GACRkB,GAAW,GALC,gDAOZG,QAAQC,IAAR,MAPY,yBASZJ,GAAW,GATC,4EAAH,qDAYbE,GACD,GAAE,CAACP,IAEJ,IAKkBU,EALFC,EAWVC,EAAQ,qBAFGC,EAAAA,EAAAA,MAESC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEzC,OACE,iCACE,SAACnB,EAAD,CAAYoB,GAAIJ,EAAhB,SAA0B,YACzBR,EACC,cAEA,iCACE,UAACL,EAAD,WACGZ,EAAK8B,aACJ,gBACEC,IAAK/B,EAAKgC,eACVC,IAAG,yCAAoCjC,EAAK8B,gBAG9C,gBAAKG,IAAKC,EAAYH,IAAI,mBAG5B,4BACE,0BACG/B,EAAKgC,eAAe,MAhCnBR,EAgC8BxB,EAAKmC,aA/BpC,IAAIC,KAAKZ,GACVa,eA8BmD,QAErD,yBAAG,kBAAoC,GAApBrC,EAAKsC,cAAmB,QAC3C,uBAAG,cACH,uBAAItC,EAAKuC,YACT,uBAAG,YACH,wBAjCMhB,EAiCQvB,EAAKwC,OAhCtBjB,EAAUkB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAmCzC,0BACE,2BACE,yBACE,SAAC,KAAD,CAAMf,GAAG,OAAOF,MAAO,CAAEC,KAAMH,GAA/B,UACE,4BAAQ,cAGZ,yBACE,SAAC,KAAD,CAAMI,GAAG,UAAUF,MAAO,CAAEC,KAAMH,GAAlC,UACE,4BAAQ,sBAKhB,SAAC,EAAAoB,SAAD,CAAUC,UAAU,yBAAK,uBAAzB,UACE,SAAC,KAAD,WAMX,C","sources":["Api/Api.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// import axios from 'axios';\n\n// export const handleSearch = keyword => {\n//   return axios.get('https://api.themoviedb.org/3/search/movie', {\n//     params: {\n//       query: keyword,\n//       api_key: '50f371d1536e52d9538ebb7dc90d104e',\n//     },\n//   });\n// };\nimport axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '50f371d1536e52d9538ebb7dc90d104e',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkGoBack = styled(Link)`\n  position: relative;\n  background-color: #ff6b6b;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: bold;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  margin: 20px;\n\n  &:hover {\n    background-color: #ee5253;\n  }\n`;\n\nexport const DivPoster = styled.div`\n  margin: 40px;\n  display: flex;\n  gap: 20px;\n`;\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieDetails } from '../../Api/Api';\nimport { LinkGoBack, DivPoster } from './MovieDetails.styled';\nimport noMovieImg from '../../img/No_Image_Available.jpg';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieDetails(movieId);\n        setData(data);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [movieId]);\n\n  const getYear = releaseDate => {\n    const date = new Date(releaseDate);\n    return date.getFullYear();\n  };\n\n  const getGenres = arrGenres => {\n    return arrGenres.map(genre => genre.name).join(', ');\n  };\n\n  const location = useLocation();\n\n  const cameBack = location.state?.from ?? '/';\n\n  return (\n    <>\n      <LinkGoBack to={cameBack}>Go Back</LinkGoBack>\n      {loading ? (\n        'Loading...'\n      ) : (\n        <>\n          <DivPoster>\n            {data.poster_path ? (\n              <img\n                alt={data.original_title}\n                src={`https://image.tmdb.org/t/p/w500${data.poster_path}`}\n              />\n            ) : (\n              <img src={noMovieImg} alt=\"not available\" />\n            )}\n\n            <div>\n              <h1>\n                {data.original_title} ({getYear(data.release_date)})\n              </h1>\n              <p>User Score: {~~(data.vote_average * 10)}%</p>\n              <p>Overview</p>\n              <p>{data.overview}</p>\n              <p>Genres</p>\n              <p>{getGenres(data.genres)}</p>\n            </div>\n          </DivPoster>\n          <div>\n            <ul>\n              <li>\n                <Link to=\"cast\" state={{ from: cameBack }}>\n                  <button>Cast</button>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"reviews\" state={{ from: cameBack }}>\n                  <button>Reviews</button>\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","data","results","getMovieDetails","id","query","getMovieCast","getMovieReviews","searchMovie","queryString","LinkGoBack","styled","Link","DivPoster","movieId","useParams","useState","setData","loading","setLoading","useEffect","getData","console","log","arrGenres","releaseDate","cameBack","useLocation","state","from","to","poster_path","alt","original_title","src","noMovieImg","release_date","Date","getFullYear","vote_average","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}