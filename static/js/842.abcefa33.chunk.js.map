{"version":3,"file":"static/js/842.abcefa33.chunk.js","mappings":"qSAYMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qIAGoBN,EAASO,IAH7B,+CAGKC,EAHL,EAGKA,KAHL,kBAIIA,EAAKC,SAJT,2HAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACCC,EADD,iBACmBD,GADnB,kBAGoBX,EAASO,IAAIK,GAHjC,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,kFACCC,EADD,iBACmBD,EADnB,8BAGoBX,EAASO,IAAIK,GAHjC,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,kFACCC,EADD,iBACmBD,EADnB,8BAGoBX,EAASO,IAAIK,GAHjC,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCJ,EADD,8BACgCI,GADhC,kBAGoBhB,EAASO,IAAIK,GAHjC,uBAGKJ,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2H,gHChBP,UAtCa,WACX,OAAwBS,EAAAA,EAAAA,UAAS,MAAjC,eAAOT,EAAP,KAAaU,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,oGAEZJ,GAAW,GAFC,UAGOd,EAAAA,EAAAA,MAHP,OAGNE,EAHM,OAIZU,EAAQV,GACRY,GAAW,GALC,gDAOZK,QAAQC,IAAR,MAPY,yDAAH,qDAUbF,GACD,GAAE,KAGD,+BACE,2BACE,wBAAI,qBACHL,EACG,aACAX,EAAKmB,KAAI,gBAAGC,EAAH,EAAGA,MAAOjB,EAAV,EAAUA,GAAV,OACP,yBACE,SAAC,KAAD,CAAMkB,GAAE,kBAAalB,GAAMmB,MAAO,CAAEC,KAAMV,GAA1C,SACGO,KAFIjB,EADF,QAUpB,C","sources":["Api/Api.js","components/Home/Home.jsx"],"sourcesContent":["// import axios from 'axios';\n\n// export const handleSearch = keyword => {\n//   return axios.get('https://api.themoviedb.org/3/search/movie', {\n//     params: {\n//       query: keyword,\n//       api_key: '50f371d1536e52d9538ebb7dc90d104e',\n//     },\n//   });\n// };\nimport axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '50f371d1536e52d9538ebb7dc90d104e',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n// import { ListMovies, MovieItem } from './home.styled';\nimport { getTrendingMovies } from '../../Api/Api';\n// import css from './home.module.css';\n\nconst Home = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const data = await getTrendingMovies();\n        setData(data);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, []);\n\n  return (\n    <>\n      <ul>\n        <h2>Trending movies:</h2>\n        {loading\n          ? 'Loading...'\n          : data.map(({ title, id }) => (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","data","results","getMovieDetails","id","query","getMovieCast","getMovieReviews","searchMovie","queryString","useState","setData","loading","setLoading","location","useLocation","useEffect","getData","console","log","map","title","to","state","from"],"sourceRoot":""}